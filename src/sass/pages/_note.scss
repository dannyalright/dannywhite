.note {
  article {
    // display: grid;
    display: flex;
    flex-direction: column;
    gap: var(--grid-gap-main);

    @media (min-width: 1024px) {
      max-width: fit-content;
      margin: 0 auto;
      align-items: center;
      // Match grid and gap from site-wide grid
      // grid-template-columns: var(--grid-template-cols-main);
    }

    header {
      padding-bottom: var(--spacing-lg);
      border-bottom: var(--stroke-thin) solid var(--color-border-primary);

      @media (min-width: 1024px) {
        text-align: center;
        border-bottom: none;
        margin-top: var(--spacing-lg);
        // grid-column: span 6;
      }

      // @media (min-width: 2190px) {
      //   grid-column: span 3;
      // }

      h1 {
        margin-bottom: var(--spacing-sm);
        // Keep line widths legible
        max-width: 24ch;

        @media (min-width: 1024px) {
          // max-width: initial;
        }
      }

      time {
        color: var(--color-text-secondary);
        display: block;
      }
    }

    .article-content {
      // Layout
      max-width: 720px;
      // Dividers
      hr {
        display: block;
        border-bottom: 1px solid var(--color-border-secondary);
        margin: var(--spacing-lg) 0;
      }

      // Headings
      // TODO: Check that style differences from typography.scss makes sense
      h2 {
        margin-top: 4rem;
        margin-bottom: 0.85rem;

        @media (min-width: 1024px) {
          margin-top: 6rem;
        }
      }

      h3 {
        margin-bottom: 0.65rem;
      }

      .h3 {
        margin-top: 3rem;

        @media (min-width: 1024px) {
          margin-top: 4.5rem;
        }
      }

      .h2 + .h3 {
        margin-top: 1rem;
      }

      // Lists
      // Give all lists some basic styling
      ul,
      ol {
        display: block;
        margin-inline-start: 0px;
        margin-inline-end: 0px;
        padding-inline-start: 2em;
      }

      // Only vertically space lists that aren't children of other lists
      // In other words: give lists vertical space unless they are indented lists
      p + ul,
      ol + ul {
        margin-block-start: 1em;
        margin-block-end: 1em;
      }

      ul {
        list-style-type: square;
      }

      ol {
        list-style-type: decimal;
      }

      figure {
        margin: var(--spacing-sm) 0;

        figcaption {
          color: var(--color-text-secondary);
          font-size: var(--font-size-sm);
          text-align: right;
          max-width: 640px; // TODO variable the same as text width
          margin-top: 1rem;
        }
      }

      .two-up {
        display: grid;

        @media (min-width: 1024px) {
          grid-template-columns: var(--grid-template-cols-main);
          gap: var(--grid-gap-main);
          figure {
            grid-row: 1;

            &.portrait {
              grid-column: span 4;
            }

            &.landscape {
              grid-column: span 8;
            }
          }
        }
      }

      // Images
      img {
        // https://sia.codes/posts/eleventy-and-cloudinary-images/
        // Relies on width and height being passed into the <img> tag so an aspect ratio can be deduced
        max-width: 100%;
        height: auto;
        // Other styling
        background-color: var(--color-swatch-hero);
      }

      // Blockquotes
      // Based on:
      // https://css-tricks.com/quoting-in-html-quotations-citations-and-blockquotes/#aa-hey-what-about-the-figure-element
      figure.quote {
        border-top: 1px solid var(--color-border-secondary);
        border-bottom: 1px solid var(--color-border-secondary);

        margin: 1.5rem 0;
        padding: 1.5rem 0;

        blockquote {
          p {
            font-weight: 500;
            font-size: 1.5rem;
            letter-spacing: var(--letter-spacing-reg);
            line-height: var(--line-height-reg);

            // Quotes
            &:before {
              content: open-quote;
            }
            &:after {
              content: close-quote;
            }
            hanging-punctuation: first last;
          }
        }

        figcaption {
          margin-top: 1rem;
          // TODO: Merge with .small-text @mixin
          text-transform: uppercase;
          font-feature-settings: "cpsp" 1;
          font-size: 12px;
          // font-weight: 600;
          color: var(--color-text-secondary);
          letter-spacing: var(--letter-spacing-wide);
          // Remember to add a <cite> element when reference creative work
        }
      }

      // Tables
      table {
        width: 100%; // Take full width of text area

        thead tr {
          font-weight: 600;
          border-bottom: 1px solid var(--color-border-primary);
        }

        tbody tr:not(:last-of-type) {
          border-bottom: 1px solid var(--color-border-secondary);
        }

        tr {
          th,
          td {
            padding: var(--spacing-xs) 0.5rem;
          }
        }
      }

      // Media queries
      @media (min-width: 1024px) {
        // grid-column: span 6;
        margin-bottom: var(--spacing-lg);

        // max-width: fit-content;
        // justify-self: end;

        // Keep line widths legible
        > p,
        ul,
        li {
          max-width: 64ch;
        }
      }

      // @media (min-width: 1536px) {
      //   grid-column: span 5;
      // }

      // @media (min-width: 2190px) {
      //   grid-column: 5 / 9;
      // }
    }

    // Style the '#' anchor
    // See eleventy.js for helpful articles
    .heading-wrapper {
      display: flex;
      align-items: baseline;
      gap: 0.25rem;
      margin-left: -0.8em; // Use in combination with `order`

      // Show the `#` permanently unless it can be hovered
      @media screen and (hover: hover) {
        .anchor {
          visibility: hidden;
          transition: var(--transition-text-opacity);
          opacity: 0;
        }
        &:hover {
          .anchor {
            visibility: visible;
            opacity: 1;
          }
        }
      }
      .anchor {
        order: -1; // Use in combination with above `margin-left`
        color: var(--color-text-secondary);
        text-decoration: none;
        transition: var(--transition-text-opacity);
        &:hover {
          opacity: var(--transition-text-opacity-result);
        }

        [hidden] {
          display: block;
        }
      }
    }
  }
}
