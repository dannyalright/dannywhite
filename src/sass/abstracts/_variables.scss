// TODO: expose as Sass variable (@use) to other stylesheets
// and remove use of hardcoded 1024px there
// $mq-desktop: 1024px;
// $mq-desktop-lg: 1280px;

:root {
  // Spacing
  --spacing-xs: 1rem;
  --spacing-sm: 1.5rem;
  --spacing-md: 2.5rem;
  --spacing-lg: 3.5rem;

  // Layout
  --breakpoint-article: 640px;
  --grid-template-cols-main: repeat(12, 1fr);
  --grid-gap-main: var(--spacing-lg);

  // @media (min-width: 1024px) {
  //   --grid-gap-main: var(--spacing-lg);
  // }

  // Borders
  --stroke-thick: 2px;
  --stroke-thin: 1px;

  // Type
  --letter-spacing-wide: 0.1em;
  --letter-spacing-reg: -0.005em;
  --letter-spacing-tight: -0.0125em;
  --letter-spacing-xtight: -0.02em;
  --line-height-wide: 175%;
  --line-height-tight: 135%;
  --line-height-xtight: 120%;

  // Transitions
  --transition-text-decoration-color: text-decoration-color 150ms ease-in-out;
  --transition-text-opacity: opacity 150ms ease-in-out;
  --transition-color-scheme: background 250ms ease-in-out, color 175ms ease;
  --transition-background-color: background-color 150ms ease-in-out;
  --transition-text-opacity-result: 0.5;

  // Light and dark mode handling
  // https://piccalil.li/tutorial/create-a-user-controlled-dark-or-light-mode/
  // Storing the user's preferred color mode
  --color-mode: "light";

  --color-dark: rgba(40 32 16 / 0.95);

  --color-light: #ffffff;

  --color-background: var(--color-light);
  --color-text: var(--color-dark);

  // Colors
  --color-text-primary: var(--color-text);
  --color-text-secondary: rgba(145 137 129 / 0.95);
  --color-border-primary: rgba(40 32 16 / 0.75);
  --color-border-secondary: rgba(145 137 129 / 0.35);
  --color-brown: hsla(36, 58%, 59%, 0.12);
  --color-red: #f8e4d7;
  --color-yellow: #faf8d2;
  --color-green: #edf3da;
  --color-blue: #e4fcf0;
}

// Light and dark mode stuff continued
// https://piccalil.li/tutorial/create-a-user-controlled-dark-or-light-mode/
body {
  background: var(--color-background);
  color: var(--color-text);
  transition: var(--transition-color-scheme);
}

// TODO: join @media and [data...] with repetitious bits into one @mixin
// Make changes if user prefers dark color scheme
@media (prefers-color-scheme: dark) {
  :root {
    // Change the color mode from which JS can hook on to
    --color-mode: "dark";
  }

  // Prevent the default from overriding a new user preference
  :root:not([data-user-color-scheme]) {
    --color-background: var(--color-dark);
    --color-text: var(--color-light);
  }
}
// Repeats the above
// Keep an eye on a JS-set attribute and change if necessary
[data-user-color-scheme="dark"] {
  --color-background: var(--color-dark);
  --color-text: var(--color-light);
}
