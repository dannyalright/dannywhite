.home {
  > body {
    .crawl-header {
      margin: 0;
      /* Start slightly downward */
      margin-top: 25vh;
      max-width: var(--width-max);

      display: grid;
      gap: 0 var(--gap-md);

      @media (--viewport-md) {
        grid-template-columns: repeat(2, 1fr);
        /* Set the side margins here since there won't be bleed on large displays */
        margin: 40vh var(--margin-x) 3rem;
        /* margin-top: 40vh; */
        /* display: flex; */
        /* margin: 0 2.5rem; */
        /* Add some breathing room at bottom */
        padding-bottom: 25vh;
      }

      /* TODO: Do this media query dynamically */
      /* min-width: calc(1800px + var(--margin-x)) */
      @media (min-width: calc(1960px)) {
        margin: 40vh auto 3rem;
      }

      .header-text {
        grid-column: 1;
        /* Set the side margins here since there will be bleed on smaller displayers */
        margin-left: var(--margin-x);
        margin-right: var(--margin-x);
        /* Cancel these out on larger displays, as it will be set at the parent  */
        @media (--viewport-md) {
          margin-left: 0;
          margin-right: 0;
        }

        /* margin-trim: block; */

        /* Set the fade-in animations  */
        /* Handle everything but the first paragraph */
        &:not(:first-of-type) {
          opacity: 0;
          animation: var(--fadein-duration) ease 2s forwards fadein;
        }
        /* Now handle first paragraph */
        /* It needs to be handled separately as it's split up into two parts */
        &:first-of-type {
          margin-bottom: 4rem;
          > p {
            &:nth-child(1) {
              font-weight: 500;
            }
            > span {
              opacity: 0;
              &:nth-child(1) {
                /* Set an earlier delay here since we want it to appear first */
                animation: var(--fadein-duration) ease 0.25s forwards fadein;
              }
              &:nth-child(2) {
                animation: var(--fadein-duration) ease 1s forwards fadein;
              }
            }
          }
        }

        &:last-of-type {
          @media (--viewport-md) {
            margin-top: 25vh;
          }
        }

        > p {
          /* Style the left-side text */
          font-size: 48px;
          font-weight: 400;
          line-height: 130%;
          letter-spacing: -1.5px;
          margin-bottom: 24px;
          /* Keep an optical width */
          max-width: 680px;

          > span.highlight {
            background-color: var(--color-swatch-a);
          }
        }
      }
    }

    .site-header {
      /* Override existing explicit height for accentuated sticky header effect */
      /* height: 38vh; */
      /* height: 20rem; */
      @media (--viewport-md) {
        /* height: 48vh; */
        /* Visually match the interstitial */
        height: var(--margin-y);
      }
    }

    .interstitial {
      margin-bottom: var(--margin-y);
    }

    .home-section {
      margin-bottom: var(--spacing-margin-bottom);

      > .page-header {
        > h2 {
          /* Override .page-header standard styling just for home */
          font-size: 56px;
        }
      }

      > .inner {
        /* Shared styles across each section */
        max-width: var(--width-max);
        margin: 0 auto;

        display: grid;
        gap: 0 var(--gap-md);
        @media (--viewport-md) {
          grid-template-columns: repeat(4, minmax(0, 1fr));
          /* minmax is necessary to stop long strings from overriding. Previously: */
          /* grid-template-columns: repeat(4, 1fr); */
          grid-template-rows: masonry;
        }

        /* Header or other large text */
        > p {
          color: var(--color-text-secondary);
          font-size: 24px;
          letter-spacing: -0.8px;
          margin-bottom: 5rem;

          /* Width */
          grid-column: span 4;
          @media (--viewport-md) {
            grid-column: span 2;
          }
          @media (--viewport-xl) {
            grid-column: span 1;
          }
        }

        > ul {
          grid-column: span 4;
          display: grid;
          gap: 0 var(--gap-md);
          @media (--viewport-md) {
            grid-template-columns: repeat(4, minmax(0, 1fr));
            /* minmax is necessary to stop long strings from overriding. Previously: */
            /* grid-template-columns: repeat(4, 1fr); */
            grid-template-rows: masonry;
          }
          > li {
            border-top: 1px solid var(--color-border-secondary);
            > a {
              /* Style */
              display: block;
              padding: 1.5rem 0;

              /* Set up transitions */
              /* Transform transitions happen only to image elements */
              & img {
                transition: var(--transition-text-opacity), transform 0.3s ease;
              }
              /* Opacity transitions are handled differently on child items */
              & h3,
              & p,
              & span,
              & svg {
                transition: var(--transition-text-opacity);
              }
              &:hover {
                & img {
                  transform: scale(1.01);
                  opacity: 0.75;
                }
                & h3,
                & p,
                & span,
                & svg {
                  opacity: var(--text-opacity-hovered);
                }
              }

              /* Item header */
              & h3 {
                font-size: 20px;
                font-style: normal;
                font-weight: 500;
                line-height: 115%; /* 23px */
                letter-spacing: -0.2px;
              }

              .outbound {
                /* Style */
                color: var(--color-text-secondary);
                font-size: 12px;
                letter-spacing: -0.12px;
                &:after {
                  position: relative;
                  top: 0.1rem;
                  opacity: 0.6;
                }
                /* Restore underline if necessary */
                text-decoration: underline;
                text-underline-offset: 1.5px;
                text-decoration-color: var(--color-border-secondary);
              }
            }
          }
        }

        /* Section-specific styles */
        > ul.projects {
          gap: 5rem var(--gap-md);
          > li {
            @media (--viewport-md) {
              grid-column: span 2;
            }
            &.featured {
              > a > img {
                /* Fade off end part */
                /* https://stackoverflow.com/a/51557089/2009441 */
                mask-image: linear-gradient(
                  to bottom,
                  rgba(0, 0, 0, 1),
                  rgba(0, 0, 0, 0)
                );
              }
              @media (--viewport-md) {
                grid-column: span 4;
                > a {
                  display: grid;
                  grid-template-columns: repeat(2, 1fr);
                  gap: var(--gap-md);
                }
                /* Reverse order of every second row */
                &:nth-of-type(even) {
                  > a {
                    > img {
                      order: 1;
                    }
                  }
                }
              }
            }
            /* Style inner */
            > a {
              > div {
                > h3 {
                  font-size: 32px;
                  font-style: normal;
                  font-weight: 500;
                  line-height: 115%; /* 55.2px */
                  letter-spacing: -0.96px;
                }
                > p {
                  font-size: 21px;
                  /* Style status paragraph */
                  &:last-of-type {
                    color: var(--color-text-tertiary);
                    font-size: 1rem;
                  }
                }
              }
            }
          }
        }

        > ul.notes {
          > li {
            @media (--viewport-md) {
              grid-column: span 2;
            }
            > a {
              /* Override some transitions */
              &:hover {
                & h3,
                & p {
                  /* Make slightly lighter on hover */
                  opacity: 0.4;
                }
              }
            }
            /* Pinned styles */
            &.pinned > a {
              display: flex;
              justify-content: space-between;
              align-items: center;
              gap: 1rem;

              /* &:after {
                content: url(/assets/images/pin.svg);
                opacity: 0.5;
              } */
              > svg > path {
                fill: var(--color-text-tertiary);
              }
            }
          }
        }

        > ul.trove {
          /* Fade off end part */
          /* https://stackoverflow.com/a/51557089/2009441 */
          mask-image: linear-gradient(rgba(0, 0, 0, 1) 60%, rgba(0, 0, 0, 0));
          /* Set a negative margin to visually compensate for the footer */
          margin-bottom: calc(-0.5 * var(--margin-y));
          /* Style inside */
          > li > a {
            & h3,
            & p {
              margin: 0;
            }
            & p {
              margin-top: 0.25rem;
              /* Style */
              color: var(--color-text-secondary);
              font-size: 14px;
              line-height: 125%; /* 17.5px */
              letter-spacing: -0.14px;
              /* Truncate text */
              /* https://css-tricks.com/almanac/properties/l/line-clamp/ */
              display: -webkit-box;
              -webkit-line-clamp: 4;
              -webkit-box-orient: vertical;
              overflow: hidden;
            }

            /* Customise the outbound slightly for this use-case */
            .outbound {
              margin-top: 0.5rem;
              /* Add flex so the following truncation works */
              display: flex;
              /* Add truncation to inner URL */
              > span {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
              }
            }
          }
        }
      }
    }
  }
}
