/* Custom media queries */
/* https://lightningcss.dev/transpilation.html#custom-media-queries
 */
@custom-media --viewport-sm (min-width: 732px);
@custom-media --viewport-md (min-width: 1024px);
@custom-media --viewport-lg (min-width: 1280px);
@custom-media --viewport-xl (min-width: 1800px);

:root {
  /* Widths */
  --width-max: 1800px;
  /* Spacing */
  --spacing-margin-x-md: 1rem;
  --spacing-xs: 1rem;
  --spacing-md: 2.5rem;
  --spacing-lg: 3.5rem;
  /* Borders */
  --stroke-thick: 2px;
  --stroke-thin: 1px;
  /* Grids */
  --grid-template-cols-main: repeat(4, 1fr);
  --gap-sm: 0.5rem;
  --gap-md: 2.5rem;
  --gap-lg: 3.5rem;
  @media (--viewport-md) {
    --gap-sm: 1rem;
    --gap-md: 5rem;
  }
  /* Margins */
  /* Basic left-and-right section margins, often on the entire page */
  --margin-x: 1rem;
  @media (--viewport-md) {
    --margin-x: 2.5rem;
  }
  @media (--viewport-xl) {
    --margin-x: 6rem;
  }
  /* Basic top-and-bottom margins, often the entire page */
  --margin-y: 5rem;
  --spacing-margin-bottom: 15rem;
  @media (--viewport-md) {
    --margin-y: 15rem;
  }
}

html {
  background-color: var(--color-background);
  transition: var(--transition-color-scheme);
}

/* Don't show a JavaScript element if the user has it turned off */
.no-js .js-content {
  display: none;
}

main {
  /* Set basic margins */
  margin-left: var(--margin-x);
  margin-right: var(--margin-x);
}

img {
  /* Override our reset to prevent stretched images */
  height: auto;
  /* Set a background fill whilst the image loads */
  background-color: var(--color-swatch-highlight);
}

/* Shared styles across home page sections and notes page(s) */
.inner {
  max-width: var(--width-max);
  margin: 0 auto;

  display: grid;
  gap: 0 var(--gap-md);
  @media (--viewport-md) {
    grid-template-columns: repeat(4, minmax(0, 1fr));
    /* minmax is necessary to stop long strings from overriding. Previously: */
    /* grid-template-columns: repeat(4, 1fr); */
    /* grid-template-rows: masonry; */
  }

  /* Header or other large text */
  > p {
    /* color: var(--color-text-secondary); */
    font-size: var(--step-1);
    letter-spacing: var(--letter-spacing-tight);
    margin-bottom: 5rem;

    /* Width */
    grid-column: span 4;
    @media (--viewport-md) {
      grid-column: span 2;
    }
    @media (--viewport-xl) {
      grid-column: span 1;
    }
  }

  /* Make every child take the full grid width by default */
  > * {
    grid-column: span 4;
  }

  > ul.tiled {
    display: grid;
    gap: 0 var(--gap-md);
    @media (--viewport-md) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
      /* minmax is necessary to stop long strings from overriding. Previously: */
      /* grid-template-columns: repeat(4, 1fr); */
      grid-template-rows: masonry;
    }

    > li {
      border-top: 1px solid var(--color-border-secondary);
      > a {
        /* Style */
        display: block;
        padding: 1.5rem 0;

        /* Set up transitions */
        /* Transform transitions happen only to image elements */
        & img {
          /* transition: var(--transition-text-opacity), transform 0.3s ease; */
          transition: transform 0.3s ease;
        }
        /* Opacity transitions are handled differently on child items */
        &:hover {
          & img {
            transform: scale(1.01);
            /* opacity: 0.75; */
          }
        }

        /* Item header */
        & h3 {
          font-size: var(--step-0);
          line-height: var(--line-height-xtight);
        }

        & p {
          margin: 1rem 0;

          font-size: var(--step-0);
        }

        .outbound {
          /* Style */
          color: var(--color-text-secondary);
          font-size: var(--step--2);
          &:after {
            position: relative;
            top: 0.1em;
            opacity: 0.6;
          }
          /* Restore underline if necessary */
          text-decoration: underline;
          text-underline-offset: 1.5px;
          text-decoration-color: var(--color-border-secondary);
        }
      }
    }
    /* Overrides */
    &.notes {
      > li {
        @media (--viewport-md) {
          grid-column: span 2;
        }
        > a {
          /* Override some transitions */
          &:hover {
            /* opacity: 0; */
            & h3,
            & span,
            & p {
              /* Make slightly lighter on hover */
              /* opacity: 1; */
            }
          }
          /* Make space for description if relevant */
          > p {
            margin-top: 0.5rem;
            color: var(--color-text-tertiary);
          }
        }
        /* Pinned styles */
        &.pinned > a > span {
          display: flex;
          justify-content: space-between;
          align-items: center;
          gap: 1rem;

          > svg {
            /* Stop these from getting clipped */
            overflow: visible;
            > path {
              fill: var(--color-text-quaternary);
            }
          }
        }
      }
    }
  }
}
