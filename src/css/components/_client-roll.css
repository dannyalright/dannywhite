.client-roll {
  grid-column: 1;
  /* grid-row: 2; */

  background-color: rgba(0, 0, 0, 0.06);
  padding: 2.5rem 0;

  display: flex;
  flex-direction: column;
  /* justify-content: center; */
  overflow: hidden;
  gap: 2.5rem;

  @media (--viewport-md) {
    justify-content: space-between; /* TODO use `center` when VH is small, or clamp it between a range */
    padding: 5vh 0;
    margin-top: 0.75rem; /* Should visually equal the margin-top of the corresponding p tag */
    grid-column: 2;

    position: sticky;

    top: 25vh; /* Should be calculated from height of the roll to be visually centered */
    height: 50vh;
    /* TODO: Use clamp for these two values to always keep a nice visual balance */
  }

  /* Handle fade-in */
  opacity: 0.35;
  --marquee-transition: opacity 2s ease;
  transition: var(--marquee-transition), background-color 0.5s ease;

  &.visible {
    background-color: var(--color-swatch-highlight);
    opacity: 1;

    .marquee {
      opacity: 1;

      .marquee-content {
        /* Start playing! */
        /* animation-delay: 3s; */
        animation-play-state: running;
      }
    }
  }

  .marquee {
    /* Handle fade-in */
    opacity: 0;
    /* Reenable marquee contents when visible is triggered */
    transition: var(--marquee-transition);

    /* Style marquee animation */
    /* https://ryanmulligan.dev/blog/css-marquee/ */
    --duration-base: 270s;
    --gap: 2.5rem;

    /* Set custom offsets and tweaks for each line */
    &:nth-child(1) {
      margin-left: -1rem;
      --duration: calc(var(--duration-base) * 1);
    }
    &:nth-child(2) {
      margin-left: -50vw;
      --duration: calc(var(--duration-base) * 0.85);
    }
    &:nth-child(3) {
      margin-left: -100vw;
      --duration: calc(var(--duration-base) * 1.08);
    }
    &:nth-child(4) {
      margin-left: -150vw;
      --duration: calc(var(--duration-base) * 1.18);
    }

    /* overflow: hidden; */
    /* Stop text from being selectable */
    user-select: none;
    /*  */
    display: flex;
    gap: var(--gap);
    /* Must define a width, using fit-content because it fluctuates depending on string, breakpoint */
    width: fit-content;

    /* background: rgba(17, 0, 255, 0.078); */

    .marquee-content {
      /* background: rgba(255, 0, 0, 0.1); */

      /* Style marquee */
      display: flex;
      flex-shrink: 0;
      align-items: center;
      justify-content: space-between;
      gap: var(--gap);

      /* Start animation */
      animation: var(--duration) linear infinite reverse scroll; /* or reverse instead of normal */
      animation-play-state: paused;
      /* animation-delay: 3s; */

      @media (prefers-reduced-motion: reduce) {
        animation-play-state: paused;
      }

      > li {
        display: flex;
        flex-shrink: 0;
        /* align-items: baseline; */

        gap: 0.5rem; /* The gap between image and text */

        /* background: rgb(221, 255, 193); */

        font-size: var(--step-4);
        font-weight: 500;
        letter-spacing: var(--letter-spacing-xtight);
        line-height: var(--line-height-single-line);

        color: rgba(0, 0, 0, 0.75);

        > img {
          width: var(--step-4);
          height: var(--step-4);
          /* Optical offset */
          position: relative;
          top: -0.05em;
        }
      }
    }

    @keyframes scroll {
      0% {
        transform: translateX(0);
      }

      100% {
        transform: translateX(calc(-100% - var(--gap)));
      }
    }
  }
}
